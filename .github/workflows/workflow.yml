# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry flake8 pytest
          poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest src


  publish:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: |
          docker login -u gomonuk -p ${{ secrets.DOCKERHUB_TOKEN }}
          echo TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }} >> .env
          docker build .  --tag gomonuk/calcbot:latest
          docker push gomonuk/calcbot:latest

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: |
          docker login -u _ -p ${{ secrets.HEROKU_TOKEN }} registry.heroku.com
          echo TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }} >> .env
          docker build . --tag registry.heroku.com/mailrutg-from-docker/web
          docker push registry.heroku.com/mailrutg-from-docker/web
          WEB_DOCKER_IMAGE_ID=$(docker inspect registry.heroku.com/mailrutg-from-docker/web --format="{{.Id}}")
          JSON=`printf '{"updates":[{"type": "web", "docker_image": "%s" }]}' "$WEB_DOCKER_IMAGE_ID"`
          curl -u '${{ secrets.HEROKU_USERNAME }}:${{ secrets.HEROKU_API_TOKEN }}' \
            -X PATCH 'https://api.heroku.com/apps/mailrutg-from-docker/formation' \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
            -d "$JSON"
